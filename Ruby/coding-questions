Which of the following are NOT advantages of a serverless architecture?

Reduced operational/management cost
Decreased vendor lock in
Improved scalability
Higher availability
Costs scale with usage
I don't know.


If you visit a website that has three web servers and a single load balancer, your browser will connect with which IP address?

The public IP of the load balancer
The public IP of one of the web servers
The private IP of one of the web servers
A composite IP address that wraps the load balancer and all web servers

Which of the following is a common disadvantage of a microservices architecture?

Decreased modularity
Strong monitoring requirements
Reduced fault isolation
Lock in to single programming language
Greater difficulty onboarding new developers


What is the value assigned to x on the following script?

function* test() {
  yield 1;
  yield 2;
  yield true;
}

const a = test();
a.next();
const x = a.next();
a.next();


You have a SQL database with a users table. You want to find all the users who have signed up with a gmail.com email address. Which query would you use?

select * from users where email like '%gmail.com%'
select * from users where email like 'gmail.com%'
select * from users where email like '%gmail%com%'
select * from users where email like '%gmail.com'
select * from users where email like 'gmail.com'


In an object-oriented language, when might a class method be preferable to an instance method?

When the method has no required arguments
When the method updates or modifies global state
When the method doesn't access or modify instance state
Only if the class is an abstract base class


Which of the following use cases would be the WORST to implement using a function as a service (e.g. AWS Lambda) implementation?

Resizing an image
Sending an email notification
Converting a document to PDF
Computing the n’th prime number (n < 1B digits)
Computing the n’th perfect square (n < 1B digits)


Assume you have a database named user with data for every user on Instagram. You want to find out which usernames include name 'Thomas'. Assuming that the username column isn't indexed, which query will run the slowest?

SELECT * FROM user WHERE username LIKE "Thomas%";
SELECT * FROM user WHERE username LIKE "Thomas";
SELECT * FROM user WHERE username LIKE "%Thomas";
SELECT * FROM user WHERE username LIKE "%Thomas%";


The query that will run the slowest is the third query:

sql
Copy code
SELECT * FROM user WHERE username LIKE "%Thomas";
This is because the % wildcard at the beginning of the search term will prevent the use of any indexes, meaning that a full table scan will be required to find all matching records.

The first and fourth queries will perform better because the wildcard is at the end of the search term, allowing for the use of an index for the prefix matching.

The second query will perform even better because it is searching for an exact match, which can use an index efficiently.

You have a very simple relational database table with 5 million rows mapping phone numbers (10 digit string) to zip codes (5 digit string). Your database has a 100GB magnetic disk, 16GB of RAM. You write a query to find all the phone numbers in the 94105 zip code that have area code 415, but the query takes several seconds to return. Which of the following is likely to give you the greatest performance improvement?

Adding indexes to the table
Changing from a magnetic disk to a SSD
Increasing the amount of RAM from 16GB to 32GB
Switching to a 200GB magnetic disk
Rewrite your query to return all the phone numbers in the 94105 zip code and perform the filtering based on area code in your code


Why are the following objects sourceA and sourceB not equal?

const source = {name: "John"};
const sourceA = Object.assign(source, {age: 10});
const sourceB = {...source, age: 10};
sourceA === sourceB // false

sourceA is a new variable and sourceB is a new variable

sourceA is a copy of source since it is adding properties to source and getting its updated value back, sourceB is extending the props from source and creating a new object

sourceA modifies source and sourceB extends source, therefore they are the same

the script is wrong, sourceA and sourceB are the same


A website at http://example.com:80/folder/index.html is attempting to make requests to the following URLs. Which access is not blocked by the same-origin policy?

http://example.com:81/folder/other.html
http://example.com:80/folder/other.html
v2.example.com:80/folder/other.html
https://example.com/folder/other.html


What is the primary purpose of CORS?

It is a way for restricted resources on a particular domain to be accessed from a different domain.
It is a standard used to verify that a user has access rights to a particular resource.
It prevent cross-origin errors.
None of the above

The correct option is: It is a way for restricted resources on a particular domain to be accessed from a different domain.

CORS (Cross-Origin Resource Sharing) is a security mechanism implemented by web browsers that allows a web page from one domain to access a resource with a different origin (a domain, protocol, and port number combination). It is a way to enable cross-domain communication, while preventing cross-site request forgery attacks.


You’ve implemented an LRU cache using a hashmap and doubly linked list. Which of the following best describes its performance characteristics?

O(1) lookup, O(n) insert
O(n) lookup, O(n) insert
O(log n) lookup, O(n) insert
O(1) lookup, O(1) insert


You have a SQL database for a user-uploaded video sharing site. It contains two tables: videos and likes. videos contains metadata about videos (e.g. title, description). likes has two columns (video_id, user_id) which indicate the users that have liked each video. You want to find all the videos that do not have any likes, using a single SQL query. What type of "join" would you use between the videos and likes table to most efficiently find the answer?


Left Join
This problem cannot be solved with a join
Full Join
Self Join
Inner Join


What is the size property of the set object, s, after running this code?

s = new Set();
s.add(0);
s.add(1);
s.add(1);
s.add(2);
s.add(3);
s.add(5);
s.add("1");
s.add("1");
s.add("2");


Given a hash function H, password p and salt s, how should a server compute a salted, hashed value to store in its database?

H(p) + s
H(s) + H(p)
H(p)
H(p + s)


The correct answer is H(p + s). To store a salted, hashed value, the password and salt should be concatenated before hashing. This technique is called salted hashing, and it helps prevent against attacks such as dictionary attacks and rainbow table attacks, where an attacker tries to precompute hashes for common passwords and then look up the hash in a table to crack the password.

You have a simple HTML webpage with many paragraphs of text on the page. You want to generate a link that you can send to various people, but have them land on different paragraphs. Which components of the URL would you change in each link? Assume you can edit the HTML as you wish, but cannot run Javascript or change the server side routing rules.


domain
protocol
path
query
hash


Which of the following is NOT true about the differences between a Map and an Object in Javascript?

Maps have a size property, Objects do not
Maps allow arbitrary key types, Objects do not
Maps are iterable, Objects are not
Maps keys are unordered, Object keys are ordered


When storing user credentials, how can you remove the security vulnerabilities resulting from different users having the same password?

This doesn't matter, because passwords are encrypted
Enforce a unique password policy at the database level
Add a unique random value to each password before hashing
Add a system-wide random value that you can add to all passwords before hashing


If a hash table has a hash function that sends all keys to the same bucket, what is the average time complexity of insert and lookup actions?

O(1), O(N)
O(N), O(N)
O(1), O(1)
O(1), O(N^2)


Imagine you're creating an API that allows users to signup and create new accounts. In addition to creating a user record, account creation kicks off multiple additional backend actions such as sending a welcome email. The entire process of creating a user record and completing the additional actions takes 5-7 seconds. What should the API do while those tasks are taking place?

The user ID should be returned immediately and additional actions should be sent to an asynchronous event queue.
The API request shouldn't return until the tasks have completed 5-7 seconds later
The various tasks should be split between multiple API endpoints, so user creation requires multiple, short requests.
All extra actions should be removed, and only basic account creation should take place.


You have the two associated models shown below about authors and the books they wrote.
Which of the available queries returns the authors who have written at least one book?

Author.joins(:books).distinct
Author.includes(:books).distinct
Book.includes(:author)
Author.all.includes(:books)


Consider the following routing snippets, and then choose the sentence that is correct.

namespace :admin do
  resources :articles, :comments
end

scope :admin do
  resources :articles, :comments
end

resources :articles, module: 'admin'
resources :comments, module: 'admin'

resources :articles, path: '/admin/articles'
resources :comments, path: '/admin/articles'

(I) and (II) are similar, and (III) and (IV) are similar.
(I) and (III) are similar, and (II) and (IV) are similar.
(I) and (IV) are similar, and (II) and (III) are similar.
(I) and (II) are similar, but (III) and (IV) are not valid routes.

The correct sentence is:

(I) and (II) are similar, and (III) and (IV) are similar.

Explanation:

(I) and (II) are similar in that they both define a namespace or a scope for the routes. They create URLs that start with "/admin/articles" and "/admin/comments", respectively. The difference is that (I) uses a namespace block, while (II) uses a scope block.

(III) and (IV) are similar in that they both use the "module" option to specify the namespace for the routes. They both create URLs that start with "/admin/articles" and "/admin/comments", respectively.

Option (I) and option (IV) are not similar, as (I) uses a namespace block and (IV) uses the "path" option to specify the URL. Option (III) is not a valid route, as it specifies the module for comments incorrectly. It should be:

resources :comments, module: 'admin'


Which of the following renders a form partial in Rails? 
SELECT ALL THAT APPLY

1: <%= render partial: 'form', locals: { author: @author } %>
2: <%= render partial: 'form', author: @author %>
3: <%= render 'form', locals: { author: @author } %>
4: <%= render 'form', author: @author %>
5: <% render ‘form’, author: @author %>
6: <% render partial: 'form', locals: { author: @author } %>

Which of the following queries will work with the ActiveJob given below?
SELECT ALL THAT APPLY

class DailySummaryJob < ApplicationJob
  queue_as :default
  def perform(user)
    DailyDigestMailer.morning_brief(user.email).deliver_now
  end
end

DailySummaryJob.perform(User.last)
DailySummaryJob.set(wait: 2.seconds).perform_later(User.last)
DailySummaryJob.perform_now(User.last)
DailySummaryJob.perform_later(User.last)
DailySummaryJob.perform(User.last).now
DailySummaryJob.perform(User.last).later


Sure, here are some multiple-choice questions that might be asked in a Ruby on Rails interview:

Which of the following is NOT a built-in association type in Ruby on Rails?
A) has_one
B) has_many
C) belongs_to
D) has_belongs_to_many

Which of the following is a popular database management system used with Ruby on Rails?
A) MySQL
B) MongoDB
C) PostgreSQL
D) All of the above

What is the command to generate a new Ruby on Rails migration file?
A) rails new
B) rails generate controller
C) rails generate migration
D) rake db:migrate

Which of the following is used to render a partial view in a Ruby on Rails application?
A) render 'partial_name'
B) render :partial => 'partial_name'
C) <%= render 'partial_name' %>
D) All of the above

Which of the following is a popular testing framework used in Ruby on Rails development?
A) PHPUnit
B) RSpec
C) Mocha
D) Jasmine

Which of the following is a popular authentication gem used in Ruby on Rails development?
A) Devise
B) Omniauth
C) Cancancan
D) All of the above

Which of the following is NOT a commonly used HTTP verb in a RESTful Ruby on Rails API?
A) GET
B) POST
C) DELETE
D) PATCH

Which of the following is the correct syntax for defining a route in Ruby on Rails?
A) route '/users', to: 'users#index'
B) route '/users', :to => 'users#index'
C) get '/users', to: 'users#index'
D) All of the above

Which of the following is used to create a new Rails application with a specific version of Ruby?
A) rails new myapp --ruby-version=2.7.2
B) rails new myapp --version=2.7.2
C) rails new myapp -r=2.7.2
D) rails new myapp --ruby=2.7.2

What is the purpose of the "yield" keyword in a Ruby on Rails view?
A) It is used to define a local variable.
B) It is used to execute a block of code.
C) It is used to render a partial view.
D) It is used to define a new method.

1: The Task model below has two attributes: title and status

Which of the following callbacks can be used with it? | C

<!-- before_save will also fire on Update operations, while before_create will only fire on Creates. -->

class Task < ApplicationRecord
  validates :title, presence: true

  def set_default_status
    self.status = 'pending'
  end
end

before_save :set_default_status

before_commit :set_default_status

before_create :set_default_status

before_create_commit :set_default_status

2: Which of the following is the correct command to roll back a migration with the timestamp 20210613165252? | C

rails db:migrate:rollback VERSION=20210613165252

rails db:migrate VERSION=20210613165252

rails db:migrate:down VERSION=20210613165252

rails db:migrate:down version=20210613165252

rails db:rollback:down VERSION=20210613165252

3: Which of the following is an incorrect implementation of the project model? | A

class Project < ApplicationRecord
  default_scope -> { order('created_at DESC updated_at <= ?', DateTime.current).includes(:developers) }
  has_and_belongs_to_many :developers
end

class Project < ApplicationRecord
  default_scope -> { order(created_at: :desc).includes(:developers, :devlopers_projects).where('updated_at <= ?', DateTime.current) }
  has_and_belongs_to_many :developers
end

class Project < ApplicationRecord
  default_scope -> { order('created_at DESC).where('updated_at <= ?', DateTime.current).includes(:developers) }
  has_and_belongs_to_many :developers
end

class Project < ApplicationRecord
  default_scope -> { includes(:developers).order(created_at: :desc) }
  has_and_belongs_to_many :developers
end

4: Which of the following is a correct implementation of a concern?

module SomeConcern
  extend ActiveSupport::Concern

  included_do
  end

  prepended_do
  end

  prepended_do
  end
end

module SomeConcern
  extend ActiveSupport::Concern

  included_do
  end

  prepended_do
  end
end

module SomeConcern
  extend ActiveSupport::Concern

  included_do
  end

  prepended_do
  end
  
  included_do
  end
end

module SomeConcern
  extend ActiveSupport::Concern

  extended_do
  end
end

5: Which of the following callbacks skip rendering the view template and only return the status code? | none of them do? | B?

around_action do
  puts 'I am a different callback!!!'
end

skip_before_action do
  puts 'I am a different callback!!!'
end

after_action do
  puts 'I am a different callback!!!'
end

before_action do
  puts 'I am a different callback!!!'
end


6: True or False: The namespace routes will automatically add :as as well as :module and :path prefixes | True

True | False

7: You were asked to delete the session for currently signed-in users whenever CSRF(Cross-Site Request Forgery)is missing from incoming requests.
Which of the following rescue blocks achieves that? | B

rescue_from
ActionDispatch::Session::InvalidAuthenticityToken do |exception|
  def delete_current_cuser_session
  end
end

rescue_from
ActionController::InvalidAuthenticityToken do |exception|
  def delete_current_cuser_session
  end
end

rescue_from
ActionController::Session::InvalidAuthenticityToken do |exception|
  def delete_current_cuser_session
  end
end

rescue_from
ActionDispatch::InvalidAuthenticityToken do |exception|
  def delete_current_cuser_session
  end
end


8: Which of the following button_to tags will function the same way as the link givin below? | C

<%= link_to 'New Article', new_article_path %>

<%= button_to 'New Article', new_article_path, type: 'button' %>

<%= button_to 'New Article', new_article_path, method: 'get' %> # default post

<%= button_to 'New Article', new_article_path %>

<%= button_to 'New Article', new_article_path, role: 'button' %>

9: Which of the following controller actions is implemented correctly to render the site layout? | C

def index
  @users = User.find_each
  layout 'site'
end

def index
  @users = User.find_each
  render layout: :site
end

def index
  @users = User.find_each
  render layout: 'site'
end

def index
  render layout: 'site'
  @users = User.find_each
end


10: Which of the following statements is correct regarding Webpacker? | A

Event if your application has Webpacker, you can still choose Sprockets to serve both JS and CSS.

Webpacker allows Sprockets to serve CSS only and prevents Sprokets from serving JS.

With Webpacker you can not use both lines in the layout mentioned below:
<%= stylesheet_pack_tag 'application', media: 'all', 'data_turbolinks_track': 'reload' %>
<%= stylesheet_link_tag 'application', media: 'all', 'data_turbolinks_track': 'reload' %>

Wepacker prevents the use of Sprockets to serve access

11: You are givin a Book model to add a cover_image using Active Storage.
Which of the following implementations is correct? | B

class Book < ApplicationRecord
  belongs_to :author
  has_attached { one: :conver_image }
end

class Book < ApplicationRecord
  belongs_to :author
  has_one_attached :cover_image
end

class Book < ApplicationRecord
  belongs_to :author
  has_attached :cover_image
end

class Book < ApplicationRecord
  belongs_to :author
  has_attached_one :cover_image
end

12: Which of the following options is correct for sending an inline attachment with an email? | D

attachments.inline['image.jpg'] = 
File.write(Rails.root.join('app/assets/images/sample_image.jpg'))

attachments.inline['image.jpg'] = 
File.open(Rails.root.join('app/assets/images/sample_image.jpg'))

attachments.inline['image.jpg'] = 
File.send(Rails.root.join('app/assets/images/sample_image.jpg'))

attachments.inline['image.jpg'] = 
File.read(Rails.root.join('app/assets/images/sample_image.jpg'))

You have a User model with two types of users: Customer and Client. 
You are asked to implement an STI(Single table inheritance) to generate a Customer model.

1: Which of the following options is correct regarding the model generator below?
| C

rails g model customer --parent=user

it will raise an exception because the model name in the generator must be capitalized.

it will create a customer model inherited by the user model and create a migration that creates a customer table with type attribute only.

it will create a Customer model inherited by the User model and add type attributes to the User model.

it will create a customer model inherited by the user model and you will need to create a migration for adding type attributes in the User model.

3: Which of the following queries optimize the check for the existence of Project model objects? | D

Project.all.blank?
Project.all.size
Project.all.present?
Project.all.empty?
Project.find_each

4: For which of the following cases can the permitted params given below be used?

params.require(:author).permit(:name, :bio, book_attributes: [:id, :title, :price, :isbn_number, :_destroy]) | B

when the route for a book and author is defined using namespace

when a book form is submitted as a nested form within the author form.

when a resourse book is nested within the author resource

when the route for a book and author is defined using scope.

6: which of the following will generate a route similar to user_admin_users? C & D

resources :users do
  member do
    get :admin_users
  end
end

resources :users do
  get :admin_users
end

resources :users do
  get :admin_users, on: :member
end

resources :users do
  get :admin_users, 'on' => 'member'
end

7: Which of the following is a correct implementation of a helper class? | C

module ApplicationHelper < ActionHelper::Base
  def formatted_date(date)
  end
end

module ApplicationHelper < ActionView::Helper
  def formatted_date(date)
  end
end

module ApplicationHelper
  def formatted_date(date)
  end
end

module ApplicationHelper < ActionController::Base
  def formatted_date(date)
  end
end

8: Given this partial _book_fields.html.erb,

<% author.books.each do |book| %>
  <%= form.fields_for book, index: book.id do | book_form | %>
    <%= book_form.text_field :title %>
  <% end %>
<% end %>

Which of the following pieces of render syntax is correct for including the partial template below in an author form? | B

<%= render partial: 'book_fields', author: author, form: form %>
<%= render partial: 'book_fields', locals: { author: author, form: form } %>
<%= render 'book_fields', author: author, form: form_with %>
<%= render 'book_fields', author: author, form: form %>


9: Given a concern called Scoppable, which of the following prints the attributes of a model instance into which Scoppable has been included? | B

module Scoppable
  extend ActiveSupport::Concern
  instance_methods do
    def print_values
      self.attributes
    end
  end
end

module Scoppable
  extend ActiveSupport::Concern
  def print_values
    self.attributes
  end
end

module Scoppable
  extend ActiveSupport::Concern
  instance_methods do
    def print_values
      attributes
    end
  end
end

module Scoppable
  extend ActiveSupport::Concern
  def self.print_values
    self.attributes
  end
end

10: Which of the following is a valid table name used by Active Storage? | B

active_storage_blob_variants
active_storage_blob
active_storage_blob_attachments
active_storage_blob_records

11: Which of the following is incorrect regarding ActionMailer? | B

Mailers can be invoked from models, controllers, jobs, views and helpers.

Mailers are not able to access the params hash.

Mailers can have a different layout than the application.

Like controllers, mailer actions also have views associated with them
